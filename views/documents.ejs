<html>
  <head>
    <title>SODA</title>
    <script src="/js/jquery-3.5.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <script src="/js/bootstrap.min.js" type="text/javascript"></script>
    <style>
      .buttonContainer button{
        margin-top:10px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <%- include('includes/header'); %>
      <div style="margin-top: 20px;">
        <div>
          <h3 style="display: inline-block;">
            Connected to <b><%=collectionName%></b> --- Total Document count <b id="countValue"><%=count%></b>
          </h3>
          <button
            class="btn btn-danger"
            style="float: right;"
            onclick="deleteCollection('<%=collectionName%>')"
          >
            Drop Collection
          </button>
        </div>
        <div class="row" style="margin-top: 20px;">
          <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <div class="buttonContainer" style="margin-bottom: 10px;">
              <button type="button" class="btn btn-outline-primary" onclick="fetchAllDoc()">All Documents</button>
              <button type="button" class="btn btn-outline-primary" onclick="fetchDocumentById()">Document By Id</button>
              <button type="button" class="btn btn-outline-primary" onclick="updateDocument()">Update</button>
              <button type="button" class="btn btn-outline-primary" onclick="insertDocument()">Insert</button>
              <button type="button" class="btn btn-outline-primary" onclick="fetchDocumentOnCriteria()">Criteria</button-->
              <button type="button" class="btn btn-outline-primary" onclick="deleteDocument()">Delete</button>
            </div>
            <label for="key">Document Key</label>
            <input type="text" style="width: 100%;" id="documentKey">
            <label for="filterCriteria" style="margin-top: 10px;">Filter Criteria</label>
            <input type="text" style="width: 100%;" id="filterCriteria">
            <label for="insertDocument" style="margin-top: 10px;">Document to insert and update</label>
            <textarea style="width: 100%;" rows="10" id="insertDocument"></textarea>
            
            <form action="/csvUpload" style="margin-top: 10px;" method="POST" enctype="multipart/form-data">
              <input type="hidden" name="collectionConnectedForm" value="<%=collectionName%>"/>
              <input type="file" id="myFile" name="filename" accept=".csv">
              <input type="submit">
            </form>
          </div>
          <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <h3 style="display: inline-block;">Result</h3><button class="btn btn-success" onclick="clearResult()" style="float: right;">Clear</button>
            <textarea style="width:100%" rows="20" id="resultDocument" readonly></textarea>
          </div>
        </div>
      </div>
      <input
        type="hidden"
        id="collectionConnected"
        value="<%=collectionName%>"
      />
    </div>
    <script>
      //To clear the result section
      function clearResult(){
        document.getElementById("resultDocument").innerText="";
        document.getElementById("documentKey").value="";
        document.getElementById("insertDocument").value="";
      }
      //function to drop a collection
      function deleteCollection(cname) {
        let obj = { key: cname };
        // console.log(obj);
        $.ajax({
          method: "POST",
          url: "/admin/dropCollection",
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
            alert("droped");
            location.href = "/admin/getAllCollections";
          },
          error: function (err) {
            console.log("error occured from server");
          },
        });
      }

      //function to get all the document in the collection
      function fetchAllDoc(){
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Please refresh the page");
          return;
        }
        var item = document.getElementById("resultDocument");
        var obj = {key:collectionName};
        $.ajax({
          method: "GET",
          url: "/admin/getAllDoc/"+collectionName,
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
              console.log(data);
              item.innerText = JSON.stringify(data);
          },
          error: function (err) {
            item.innerText =err;
          },
        });

      }

      //To get document based on criteria

      function fetchDocumentOnCriteria(){
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Please refresh the page");
          return;
        }
       
        let filterCriteria = document.getElementById("filterCriteria").value;
        if(filterCriteria.length<1){
          alert("Please enter a valid criteria");
          return;
        }
        let filter;
        try{
          filter = JSON.parse(filterCriteria);
        }catch(e){
          alert("Not a valid criteria");
          return;
        }
        var item = document.getElementById("resultDocument");
        var obj = {collection:collectionName,query:filter};

        $.ajax({
          method: "POST",
          url: "/admin/getDocByFilter",
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
              item.innerText = JSON.stringify(data);
          },
          error: function (err) {
            item.innerText =err;
          },
        });

      }
      //function to fetch document by id
      function fetchDocumentById(){
        
        var key = document.getElementById("documentKey").value;
        if(key == undefined || key == null || key.length <1){
          alert("Please Enter a key");
          return;
        }
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Unable to identify collectio name");
          return;
        }
        
        var item = document.getElementById("resultDocument");
        $.ajax({
          method: "GET",
          url: "/admin/getDocByKey/?collection="+collectionName+"&key="+key,
          contentType: "application/json",
          success: function (data) {
              console.log(data);
              item.innerText = JSON.stringify(data);
          },
          error: function (err) {
            item.innerText =err;
          },
        });
      }
      //function to delete the document from the selected collection
      function deleteDocument(){
        var key = document.getElementById("documentKey").value;
        if(key == undefined || key == null || key.length <1){
          alert("Please Enter a key");
          return;
        }
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Unable to identify collectio name");
          return;
        }
        var obj = {collection:collectionName,key:key};
        
        var item = document.getElementById("resultDocument");
        var countElem = document.getElementById("countValue");
        $.ajax({
          method: "POST",
          url: "/admin/deleteDocument",
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
            item.innerText = "Deleted";
            countElem.innerText = data;
          },
          error: function (err) {
           item.innerText="ERROR :-"+JSON.stringify(err);
          },
        });

      }
      //Function to insert document in the collection
      function insertDocument(){
        let jsonInContainer = document.getElementById("insertDocument").value;
        if(jsonInContainer.length<1){
          alert("Please enter value in insert and update document area");
          return;
        }
        let jsonToInsert;
        try{
          jsonToInsert = JSON.parse(jsonInContainer);
        }catch(e){
          alert("Not a valid json object");
          return;
        }
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Unable to identify collectio name");
          return;
        }
        let obj = {collection:collectionName,document:jsonToInsert};
        var item = document.getElementById("resultDocument");
        var countElem = document.getElementById("countValue");
        $.ajax({
          method: "POST",
          url: "/admin/insertDocument",
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
            item.innerText = "Inserted";
            countElem.innerText = data;
          },
          error: function (err) {
           item.innerText="ERROR :-"+JSON.stringify(err);
          },
        });


      }


      function updateDocument(){
        let jsonInContainer = document.getElementById("insertDocument").value;
        if(jsonInContainer.length<1){
          alert("Please enter value in insert and update document area");
          return;
        }
        let jsonToInsert;
        try{
          jsonToInsert = JSON.parse(jsonInContainer);
        }catch(e){
          alert("Not a valid json object");
          return;
        }
        var collectionName = document.getElementById("collectionConnected").value;
        if(collectionName == undefined || collectionName == null || collectionName.length <1){
          alert("Unable to identify collectio name");
          return;
        }
        var key = document.getElementById("documentKey").value;
        if(key == undefined || key == null || key.length <1){
          alert("Please Enter a key");
          return;
        }
        let obj = {collection:collectionName,document:jsonToInsert,key:key};
        var item = document.getElementById("resultDocument");
        $.ajax({
          method: "POST",
          url: "/admin/updateDocument",
          contentType: "application/json",
          data: JSON.stringify(obj),
          success: function (data) {
            item.innerText = data;
          },
          error: function (err) {
           item.innerText="ERROR :-"+JSON.stringify(err);
          },
        });
      }
    </script>
  </body>
</html>
